apply plugin: 'com.android.application'
apply plugin: 'android-aspectjx'
//aspectjx {//另外如果使用淘宝等其他的 sdk ,需要进行排除
//    exclude 'androidx','com.google','com.squareup','com.alipay','org.apache','com.taobao'
//    enabled true
//}
//Sophix热修复
apply plugin: 'com.aliyun.ams.emas-services'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "cn.cqs.helloandroid"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        ndk {
            //选择要添加的对应cpu类型的.so库。热修复支持五种
            abiFilters 'armeabi-v7a', 'x86'//'arm64-v8a', 'armeabi', 'armeabi-v7a', 'x86', 'x86_64'
        }
    }
    signingConfigs {
        release {
            keyAlias 'android'
            keyPassword '123456'
            storeFile file('../keystore.jks')
            storePassword '123456'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //当前打包是否为了是补丁
    def isPatch = false
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                Calendar calendar = Calendar.getInstance(Locale.CHINA)
                def buildDate = String.format(Locale.CHINA, "%04d%02d%02d", calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH) + 1, calendar.get(Calendar.DAY_OF_MONTH))
                def versionName = defaultConfig.versionName
                def versionCode = defaultConfig.versionCode
                //android studio3.0之前的写法
                //output->output.outputFile=new File(output.outputFile.parent,output.outputFile.name.replace(".apk","-"+defaultConfig.versionName+".apk"))
                //android studio3.0的写法
                //项目名-版本名-版本号-release/debug.apk
                if (variant.buildType.name == 'release') {
                    if (isPatch){
                        outputFileName = "${project.archivesBaseName}-v${versionName}-${versionCode}-${buildDate}-release.apk"
                    } else {
                        outputFileName = "${project.archivesBaseName}-v${versionName}-${versionCode}-${buildDate}-release-patch.apk"
                    }
                } else {
                    outputFileName = "${project.archivesBaseName}-v${versionName}-${versionCode}-${buildDate}-debug.apk"
                }
            }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    def deps = rootProject.ext.dependencies
    implementation deps.appcompat
    implementation deps.design
    implementation deps.glide
    implementation deps.constraint
    implementation project(':common')
//    implementation project(':crash')
//    implementation project(':logcat')
//    implementation project(':workflow')
    implementation 'com.github.bingoloves:crash:1.0.2'
    implementation 'com.github.bingoloves:logcat:1.0.0'
    implementation 'com.github.bingoloves:workflow:1.0.0'
    implementation 'com.github.bingoloves:adapter:1.0.0'
    annotationProcessor deps.glideCompiler
    annotationProcessor deps.arouterCompiler
    annotationProcessor deps.butterknifeCompiler
    //阿里云 热修复
    implementation 'com.aliyun.ams:alicloud-android-hotfix:3.2.17'
    //内存泄漏检测工具
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    //子模块部分
    if (!isLoginModule.toBoolean()) {
        implementation project(':login')
    }
}
